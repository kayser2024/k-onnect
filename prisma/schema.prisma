generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model OSF_Product {
  codigoEan String? @db.VarChar(20)
  codigoSap String? @db.VarChar(30)
  url_foto  String? @db.VarChar(255)
  id        Int     @id @default(autoincrement())
}

model roles {
  id       Int        @id @default(autoincrement())
  name     String     @unique(map: "name") @db.VarChar(150)
  usuarios usuarios[]
}

model usuarios {
  UserID        Int           @id @default(autoincrement())
  dni           String        @db.VarChar(10)
  name          String        @db.VarChar(150)
  lastName      String        @db.VarChar(150)
  email         String        @unique(map: "email") @db.VarChar(100)
  emailVerified String        @db.VarChar(100)
  password      String        @db.VarChar(100)
  image         String        @db.VarChar(150)
  rolId         Int
  status        Boolean       @default(true)
  pickupPointID Int?
  roles         roles         @relation(fields: [rolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_ibfk_1")
  PickupPoints  PickupPoints? @relation(fields: [pickupPointID], references: [PickupPointID], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_ibfk_2")

  @@index([rolId], map: "rolId")
  @@index([pickupPointID], map: "usuarios_ibfk_2")
}

model OSF_Product_bk {
  codigoEan String  @id @db.VarChar(100)
  codigoSap String? @db.VarChar(100)
  url_foto  String? @db.VarChar(300)
}

model OrderLogs {
  LogID       Int         @id @default(autoincrement())
  OrderNumber String      @db.VarChar(50)
  CommentText String      @db.Text
  ImageURL    String?     @db.VarChar(255)
  StatusID    Int
  UserID      Int
  CreatedAt   DateTime?   @default(now()) @db.Timestamp(0)
  StatusOld   Int?
  OrderStatus OrderStatus @relation(fields: [StatusID], references: [StatusID], onDelete: NoAction, onUpdate: NoAction, map: "OrderLogs_ibfk_1")
  Users       Users       @relation(fields: [UserID], references: [UserID], onDelete: NoAction, onUpdate: NoAction, map: "OrderLogs_ibfk_2")

  @@index([StatusID], map: "StatusID")
  @@index([UserID], map: "UserID")
}

model OrderStatus {
  StatusID    Int         @id @default(autoincrement())
  Description String?     @db.VarChar(50)
  OrderLogs   OrderLogs[]
  Orders      Orders[]
}

model Orders {
  OrderID           Int             @id @default(autoincrement())
  OrderNumber       String          @unique(map: "OrderNumber") @db.VarChar(50)
  Invoice           String          @db.VarChar(20)
  OrderCreatedAtUTC DateTime?       @db.Timestamp(0)
  StatusID          Int
  UserID            Int
  PickupPointID     Int?
  PickupPoint       String?         @db.VarChar(100)
  InfoShippingID    Int?
  DataFacturationID Int
  HasIncidence      Boolean?        @default(false)
  QtyIncidence      Int?            @default(0)
  UserUpdaterID     Int?
  CreatedAt         DateTime        @default(now()) @db.Timestamp(0)
  UpdatedAt         DateTime?       @default(now()) @db.Timestamp(0)
  Incidence         Incidence[]
  OrderStatus       OrderStatus     @relation(fields: [StatusID], references: [StatusID], onDelete: NoAction, onUpdate: NoAction, map: "Orders_ibfk_1")
  Users             Users           @relation(fields: [UserID], references: [UserID], onDelete: NoAction, onUpdate: NoAction, map: "Orders_ibfk_2")
  PickupPoints      PickupPoints?   @relation(fields: [PickupPointID], references: [PickupPointID], onDelete: NoAction, onUpdate: NoAction, map: "Orders_ibfk_3")
  DataFacturation   DataFacturation @relation(fields: [DataFacturationID], references: [DataFacturationID], onDelete: NoAction, onUpdate: NoAction, map: "Orders_ibfk_4")
  InfoShipping      InfoShipping?   @relation(fields: [InfoShippingID], references: [InfoShippingID], onDelete: NoAction, onUpdate: NoAction, map: "Orders_ibfk_5")

  @@index([PickupPointID], map: "PickupPointID")
  @@index([StatusID], map: "StatusID")
  @@index([UserID], map: "UserID")
  @@index([DataFacturationID], map: "Orders_ibfk_4")
  @@index([InfoShippingID], map: "Orders_ibfk_5")
}

model PickupPoints {
  PickupPointID Int            @id @default(autoincrement())
  Description   String?        @db.VarChar(100)
  District      String?        @db.VarChar(100)
  Province      String?        @db.VarChar(100)
  Department    String?        @db.VarChar(100)
  LocationCode  String?        @db.VarChar(10)
  Place         String?        @db.VarChar(255)
  Address       String?        @db.VarChar(255)
  Grouped       String?        @db.VarChar(20)
  Incidence     Incidence[]
  InfoShipping  InfoShipping[]
  Orders        Orders[]
  Users         Users[]
  usuarios      usuarios[]
}

model Roles {
  RoleID      Int     @id @default(autoincrement())
  Description String? @db.VarChar(50)
  Users       Users[]
}

model TypesDoc {
  TypeDocID   Int     @id @default(autoincrement())
  Description String? @db.VarChar(50)
  Users       Users[]
}

model Users {
  UserID        Int           @id @default(autoincrement())
  Email         String        @unique(map: "Email") @db.VarChar(255)
  Password      String        @db.VarChar(255)
  Name          String        @db.VarChar(100)
  Status        Boolean       @default(true)
  TypeDocID     Int
  NroDoc        String        @unique(map: "NroDoc") @db.VarChar(16)
  RoleID        Int
  LastName      String?       @db.VarChar(255)
  PickupPointID Int?
  CreatedAt     DateTime?     @default(now()) @db.Timestamp(0)
  UpdatedAt     DateTime?     @default(now()) @db.Timestamp(0)
  Incidence     Incidence[]
  OrderLogs     OrderLogs[]
  Orders        Orders[]
  TypesDoc      TypesDoc      @relation(fields: [TypeDocID], references: [TypeDocID], onDelete: NoAction, onUpdate: NoAction, map: "Users_ibfk_1")
  Roles         Roles         @relation(fields: [RoleID], references: [RoleID], onDelete: NoAction, onUpdate: NoAction, map: "Users_ibfk_2")
  PickupPoints  PickupPoints? @relation(fields: [PickupPointID], references: [PickupPointID], onDelete: NoAction, onUpdate: NoAction, map: "Users_ibfk_3")

  @@index([RoleID], map: "RoleID")
  @@index([TypeDocID], map: "TypeDocID")
  @@index([PickupPointID], map: "Users_ibfk_3")
}

model tbl_EAN {
  id   BigInt  @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  sku  String? @db.Text
  link String? @db.Text
}

model tbl_articulo {
  id        BigInt  @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  codigoEan String? @db.Text
  codigoSap String? @db.Text
}

model Incidence {
  IncidenceID       Int             @id @default(autoincrement())
  OrdenID           Int
  InvoiceOriginal   String?         @db.VarChar(20)
  InvoiceIncidence  String?         @db.VarChar(20)
  NCIncidence       String?         @db.VarChar(20)
  UserId            Int
  TypeIncidenceID   Int
  IsCompleted       Boolean?        @default(false)
  CompletedDate     DateTime?       @db.Timestamp(0)
  Description       String?         @db.Text
  IncidenceComments String?         @db.VarChar(255)
  CreatedAt         DateTime?       @default(now()) @db.Timestamp(0)
  PickupPointID     Int?
  UserUpdater       Int?
  UpdatedAt         DateTime?       @db.Timestamp(0)
  Received          Boolean?        @default(false)
  ReceivedDate      DateTime?       @db.Timestamp(0)
  Dispatched        Boolean?        @default(false)
  DispatchedDate    DateTime?       @db.Timestamp(0)
  IsConfirmed       Boolean?        @default(false)
  Comments          String?         @db.Text
  Orders            Orders          @relation(fields: [OrdenID], references: [OrderID], onDelete: Cascade, map: "Incidence_ibfk_1")
  TypesIncidence    TypesIncidence  @relation(fields: [TypeIncidenceID], references: [TypeIncidenceID], onDelete: NoAction, onUpdate: NoAction, map: "Incidence_ibfk_2")
  Users             Users           @relation(fields: [UserId], references: [UserID], onDelete: NoAction, onUpdate: NoAction, map: "Incidence_ibfk_3")
  PickupPoints      PickupPoints?   @relation(fields: [PickupPointID], references: [PickupPointID], onDelete: NoAction, onUpdate: NoAction, map: "Incidence_ibfk_4")
  IncidenceLogs     IncidenceLogs[]

  @@index([UserId], map: "UserId")
  @@index([TypeIncidenceID], map: "Incidence_ibfk_2")
  @@index([PickupPointID], map: "Incidence_ibfk_4")
  @@index([OrdenID], map: "Incidence_ibfk_1")
}

model TypesIncidence {
  TypeIncidenceID Int         @id @default(autoincrement())
  Description     String?     @db.VarChar(20)
  Incidence       Incidence[]
}

model IncidenceLogs {
  IncidenceLogID   Int       @id @default(autoincrement())
  IncidenceID      Int
  CodEan           String    @db.VarChar(50)
  CodProd          String?   @db.VarChar(50)
  ProdQuantity     Int?
  ProdSubtotal     Decimal?  @db.Decimal(10, 2)
  InvoiceOriginal  String?   @db.VarChar(25)
  NCIncidence      String?   @db.VarChar(20)
  InvoiceIncidence String?   @db.VarChar(25)
  Description      String?   @db.VarChar(255)
  CreatedAt        DateTime? @db.Timestamp(0)
  Incidence        Incidence @relation(fields: [IncidenceID], references: [IncidenceID], onDelete: Cascade, map: "FK_IncidenceID")

  @@index([IncidenceID], map: "FK_IncidenceID")
}

model InfoShipping {
  InfoShippingID Int           @id @default(autoincrement())
  OrderNumber    String        @db.VarChar(50)
  Nombre         String        @db.VarChar(255)
  LastName       String?       @db.VarChar(255)
  Address        String        @db.VarChar(255)
  Reference      String?       @db.VarChar(255)
  Phone          String?       @db.VarChar(12)
  Country        String?       @db.VarChar(50)
  Department     String?       @db.VarChar(100)
  Province       String?       @db.VarChar(100)
  District       String?       @db.VarChar(100)
  Dni            String        @db.VarChar(16)
  Service        String        @db.VarChar(50)
  LocationCode   String        @db.VarChar(20)
  TypeShipping   String        @db.VarChar(20)
  PickupPointID  Int?
  PickupPoints   PickupPoints? @relation(fields: [PickupPointID], references: [PickupPointID], onDelete: NoAction, onUpdate: NoAction, map: "fk_PickupPointID")
  Orders         Orders[]

  @@index([InfoShippingID], map: "InfoShippingID")
  @@index([OrderNumber], map: "fk_OrderID")
  @@index([PickupPointID], map: "fk_PickupPointID")
}

model tbl_inventary {
  id         Int      @id @default(autoincrement())
  sku        String?  @db.VarChar(255)
  url_1      String?  @db.VarChar(255)
  url_2      String?  @db.VarChar(255)
  url_3      String?  @db.VarChar(255)
  url_4      String?  @db.VarChar(255)
  url_5      String?  @db.VarChar(255)
  url_6      String?  @db.VarChar(255)
  price      Decimal? @db.Decimal(10, 2)
  price_sale Decimal? @db.Decimal(10, 2)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DataFacturation {
  DataFacturationID     Int      @id @default(autoincrement())
  OrderNumber           String?  @db.VarChar(50)
  TypeDoc               String?  @db.VarChar(20)
  IdClient              String?  @db.VarChar(20)
  TypeDocIdentification String?  @db.VarChar(20)
  NameFacturation       String?  @db.VarChar(100)
  EmailFacturation      String?  @db.VarChar(100)
  PhoneFacturation      String?  @db.VarChar(20)
  Currency              String?  @db.VarChar(5)
  Orders                Orders[]
}
